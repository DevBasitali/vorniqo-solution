// import type { Metadata } from "next";
// import localFont from 'next/font/local'; // <-- Import localFont
// import "./globals.css";
// import Navbar from "../components/layout/navbar";
// import Footer from "../components/layout/footer";


// const fontIntegral = localFont({
//   src: '/fonts/integral-cf-bold.woff2',
//   display: 'swap',
//   weight: '700', // Specify the weight
//   variable: '--font-integral', // Create a CSS variable
// });

// const fontTtFirs = localFont({
//   src: '/fonts/tt.ttf',
//   display: 'swap',
//   weight: '300', // Specify the weight
//   variable: '--font-tt-firs', // Create a CSS variable
// });

// export const metadata: Metadata = {
//   title: "Vorniqo Solutions",
//   description: "Empowering the Future",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       {/* 3. Apply the font variables to the body */}
//       <body
//         className={`${fontIntegral.variable} ${fontTtFirs.variable} antialiased`}
//       >
//         <Navbar />
//         {children}
//         <Footer />
//       </body>
//     </html>
//   );
// }


import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "../components/layout/navbar"
import Footer from "../components/layout/footer"
import About from '@/components/sections/about';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Navbar/>
        {children}
        <Footer/>
      </body>
    </html>
  );
}
